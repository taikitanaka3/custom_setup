set-option -g default-terminal "xterm-256color"
set-option -g history-limit 65536

set-option -s escape-time 0
set-option -g display-time 4000 # [ms]

# Status Formats
  set-option -g status-interval 1
  set-option -g status-justify "centre"
  set-option -g status-left "s#S/ "
  set-option -g status-left-length 50
  set-option -g status-position bottom
  set-option -g status-right "%Y/%m/%d %T"
  set-option -g status-right-length 50
  # set-option -g status-utf8 on
  set-window-option -g window-status-current-format "#[fg=bold] w#I-#P/#W "
  set-window-option -g window-status-format " w#I-#P/#W "

# Status Colors
  set-option -g status-fg default
  set-option -g status-bg default
  # set-option -g status-bg white # light
  # set-option -g status-bg black # dark

  set-window-option -g window-status-fg brightyellow # light
  # set-window-option -g window-status-fg brightblue # dark
  set-window-option -g window-status-bg default

  set-window-option -g window-status-current-fg red
  set-window-option -g window-status-current-bg default
  set-window-option -g window-status-current-attr bright

  set-option -g pane-border-fg brightcyan
  set-option -g pane-active-border-fg brightcyan

  set-option -g message-fg brightred
  # set-option -g message-bg white # light
  # set-option -g message-bg black # dark
  set-option -g message-bg default # both

  set-option -g display-panes-active-colour blue
  set-option -g display-panes-colour brightred

# Window
  set-window-option -g automatic-rename on
  set-window-option -g clock-mode-colour green
  set-window-option -g mode-keys vi

# Key Binds
  unbind-key C-b
  set-option -g prefix C-x
  bind-key C-x send-prefix

  bind-key \ split-window -h
  bind-key | split-window -h \; select-layout even-horizontal
  bind-key - split-window -v
  bind-key _ split-window -v \; select-layout even-vertical

  is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

  bind-key -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
  bind-key -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
  bind-key -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
  bind-key -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"

  # bind-key -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-h) || tmux select-pane -L"
  # bind-key -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-j) || tmux select-pane -D"
  # bind-key -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-k) || tmux select-pane -U"
  # bind-key -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-l) || tmux select-pane -R"

  bind-key -r H resize-pane -L 2
  bind-key -r J resize-pane -D 2
  bind-key -r K resize-pane -U 2
  bind-key -r L resize-pane -R 2

  bind-key -r h previous-window
  bind-key -r l next-window
  bind-key -r n new-window #-n 'unnamed'
  bind-key -r r source-file ~/.tmux.conf
  bind-key -r x kill-window

  bind-key -T copy-mode-vi v   send -X begin-selection
  bind-key -T copy-mode-vi V   send -X select-line
  bind-key -T copy-mode-vi C-v send -X rectangle-toggle
  bind-key -T copy-mode-vi y   send -X copy-selection

  bind-key -T copy-mode-vi C-h select-pane -L
  bind-key -T copy-mode-vi C-j select-pane -D
  bind-key -T copy-mode-vi C-k select-pane -U
  bind-key -T copy-mode-vi C-l select-pane -R

  bind-key Space copy-mode
  bind-key p paste-buffer
